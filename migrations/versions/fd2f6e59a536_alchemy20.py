"""alchemy20

Revision ID: fd2f6e59a536
Revises: 
Create Date: 2024-02-04 19:36:38.449981

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fd2f6e59a536'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('category_idx', 'category', ['category', 'code'], unique=False)
    op.create_table('user',
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('person', sa.UUID(), nullable=False),
    sa.Column('validated', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('NOT(email IS NULL AND phone IS NULL)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=True)
    op.create_table('access',
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('access_category_code_idx', 'access', ['category', 'code'], unique=False)
    op.create_index(op.f('ix_access_user'), 'access', ['user'], unique=False)
    op.create_table('country',
    sa.Column('iso2', sa.String(), nullable=False),
    sa.Column('iso3', sa.String(), nullable=False),
    sa.Column('m49', sa.SMALLINT(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_country_iso2'), 'country', ['iso2'], unique=True)
    op.create_index(op.f('ix_country_iso3'), 'country', ['iso3'], unique=True)
    op.create_index(op.f('ix_country_m49'), 'country', ['m49'], unique=False)
    op.create_index(op.f('ix_country_name'), 'country', ['name'], unique=False)
    op.create_table('currency',
    sa.Column('num', sa.SMALLINT(), nullable=False),
    sa.Column('adjective', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_plural', sa.String(), nullable=False),
    sa.Column('name_minor', sa.String(), nullable=False),
    sa.Column('name_minor_plural', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('symbol_native', sa.String(), nullable=False),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('rounding', sa.Numeric(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('currency_num_idx', 'currency', ['category', 'num'], unique=False)
    op.create_index(op.f('ix_currency_num'), 'currency', ['num'], unique=False)
    op.create_index(op.f('ix_currency_user'), 'currency', ['user'], unique=False)
    op.create_table('data',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('algorithm', sa.String(), nullable=False),
    sa.Column('content', postgresql.BYTEA(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('data_idx', 'data', ['category', 'code', 'table', 'object', 'algorithm', 'hash'], unique=False)
    op.create_index(op.f('ix_data_user'), 'data', ['user'], unique=False)
    op.create_table('entity',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('entity_category_code_idx', 'entity', ['category', 'code'], unique=False)
    op.create_index(op.f('ix_entity_user'), 'entity', ['user'], unique=False)
    op.create_table('language',
    sa.Column('iso', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_language_iso'), 'language', ['iso'], unique=False)
    op.create_index(op.f('ix_language_name'), 'language', ['name'], unique=False)
    op.create_index(op.f('ix_language_user'), 'language', ['user'], unique=False)
    op.create_index('language_category_code_idx', 'language', ['category', 'code'], unique=False)
    op.create_table('message',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('receiver', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['receiver'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_message_user'), 'message', ['user'], unique=False)
    op.create_index('message_idx', 'message', ['category', 'code', 'user', 'receiver', 'begins'], unique=False)
    op.create_index('message_receiver_idx', 'message', ['category', 'code', 'receiver', 'begins'], unique=False)
    op.create_index('message_sender_idx', 'message', ['category', 'code', 'user', 'begins'], unique=False)
    op.create_table('picture',
    sa.Column('picture', postgresql.BYTEA(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_picture_user'), 'picture', ['user'], unique=False)
    op.create_index('picture_category_code_idx', 'picture', ['category', 'code'], unique=False)
    op.create_table('procedure',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('procedure', sa.String(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_procedure_name'), 'procedure', ['name'], unique=False)
    op.create_index(op.f('ix_procedure_user'), 'procedure', ['user'], unique=False)
    op.create_index('procedure_category_code_idx', 'procedure', ['category', 'code'], unique=False)
    op.create_table('property',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('value_int', sa.Integer(), nullable=True),
    sa.Column('value_dec', sa.Numeric(), nullable=True),
    sa.Column('value_dt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('NOT(value IS NULL AND value_int IS NULL AND value_dec IS NULL AND value_dt IS NULL)'),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_property_user'), 'property', ['user'], unique=False)
    op.create_index('obj_idx', 'property', ['table', 'category', 'code', 'object'], unique=False)
    op.create_index('val_dec_idx', 'property', ['table', 'category', 'code', 'value_dec'], unique=False)
    op.create_index('val_dt_idx', 'property', ['table', 'category', 'code', 'value_dt'], unique=False)
    op.create_index('val_idx', 'property', ['table', 'category', 'code', 'value'], unique=False)
    op.create_index('val_int_idx', 'property', ['table', 'category', 'code', 'value_int'], unique=False)
    op.create_table('rate',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_rate_user'), 'rate', ['user'], unique=False)
    op.create_index('rate_category_code_idx', 'rate', ['category', 'code'], unique=False)
    op.create_table('relation',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('src', sa.String(), nullable=False),
    sa.Column('src_id', sa.UUID(), nullable=False),
    sa.Column('trg', sa.String(), nullable=False),
    sa.Column('trg_id', sa.UUID(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_relation_user'), 'relation', ['user'], unique=False)
    op.create_index('name_src_idx', 'relation', ['category', 'code', 'src', 'trg', 'src_id'], unique=False)
    op.create_index('name_trg_idx', 'relation', ['category', 'code', 'src', 'trg', 'trg_id'], unique=False)
    op.create_table('account',
    sa.Column('currency', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['currency'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('account_issuer_idx', 'account', ['category', 'code', 'currency', 'table', 'object'], unique=True)
    op.create_index(op.f('ix_account_user'), 'account', ['user'], unique=False)
    op.create_table('company',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country', sa.UUID(), nullable=False),
    sa.Column('registered', sa.Date(), nullable=False),
    sa.Column('closed', sa.Date(), nullable=True),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['country'], ['country.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('company_nane_idx', 'company', ['category', 'country', 'code', 'name'], unique=False)
    op.create_index(op.f('ix_company_user'), 'company', ['user'], unique=False)
    op.create_table('document',
    sa.Column('country', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('series', sa.String(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('issue', sa.Date(), nullable=False),
    sa.Column('expire', sa.Date(), nullable=True),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['country'], ['country.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('document_idx', 'document', ['category', 'code', 'country', 'series', 'number', 'issue'], unique=False)
    op.create_index(op.f('ix_document_user'), 'document', ['user'], unique=False)
    op.create_table('place',
    sa.Column('country', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['country'], ['country.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_place_country'), 'place', ['country'], unique=False)
    op.create_index(op.f('ix_place_user'), 'place', ['user'], unique=False)
    op.create_index('place_name_idx', 'place', ['country', 'name'], unique=False)
    op.create_table('position',
    sa.Column('rate', sa.UUID(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['rate'], ['rate.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_position_rate'), 'position', ['rate'], unique=False)
    op.create_table('state',
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('next', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('proc_in', sa.UUID(), nullable=True),
    sa.Column('proc_out', sa.UUID(), nullable=True),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['proc_in'], ['procedure.id'], ),
    sa.ForeignKeyConstraint(['proc_out'], ['procedure.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_state_user'), 'state', ['user'], unique=False)
    op.create_index('state_idx', 'state', ['category', 'code', 'state'], unique=False)
    op.create_index('state_object_idx', 'state', ['table', 'object', 'category', 'code', 'state'], unique=True)
    op.create_table('translation',
    sa.Column('language', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('table', sa.String(), nullable=False),
    sa.Column('object', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['language'], ['language.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_translation_language'), 'translation', ['language'], unique=False)
    op.create_index('translation_table_object_idx', 'translation', ['table', 'object'], unique=False)
    op.create_table('address',
    sa.Column('country', sa.UUID(), nullable=False),
    sa.Column('region', sa.UUID(), nullable=False),
    sa.Column('place', sa.UUID(), nullable=False),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('position', sa.UUID(), nullable=False),
    sa.Column('building', sa.String(), nullable=False),
    sa.Column('apartment', sa.String(), nullable=True),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['country'], ['country.id'], ),
    sa.ForeignKeyConstraint(['place'], ['place.id'], ),
    sa.ForeignKeyConstraint(['region'], ['place.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('address_idx', 'address', ['country', 'region', 'place', 'postcode', 'position'], unique=False)
    op.create_index(op.f('ix_address_user'), 'address', ['user'], unique=False)
    op.create_table('operation',
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('debit', sa.UUID(), nullable=False),
    sa.Column('credit', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('category', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user', sa.UUID(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['credit'], ['account.id'], ),
    sa.ForeignKeyConstraint(['debit'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_operation_user'), 'operation', ['user'], unique=False)
    op.create_index('operation_cr_idx', 'operation', ['category', 'code', 'credit', 'number', 'begins'], unique=False)
    op.create_index('operation_db_idx', 'operation', ['category', 'code', 'debit', 'number', 'begins'], unique=False)
    op.create_index('operation_idx', 'operation', ['category', 'code', 'debit', 'credit', 'begins'], unique=False)
    op.create_table('person',
    sa.Column('name_first', sa.String(), nullable=False),
    sa.Column('name_last', sa.String(), nullable=False),
    sa.Column('name_third', sa.String(), nullable=True),
    sa.Column('sex', sa.Boolean(), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('birth_place', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('begins', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['birth_place'], ['place.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('person_idx', 'person', ['name_first', 'name_last', 'name_third', 'sex', 'birthdate', 'birth_place'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('person_idx', table_name='person')
    op.drop_table('person')
    op.drop_index('operation_idx', table_name='operation')
    op.drop_index('operation_db_idx', table_name='operation')
    op.drop_index('operation_cr_idx', table_name='operation')
    op.drop_index(op.f('ix_operation_user'), table_name='operation')
    op.drop_table('operation')
    op.drop_index(op.f('ix_address_user'), table_name='address')
    op.drop_index('address_idx', table_name='address')
    op.drop_table('address')
    op.drop_index('translation_table_object_idx', table_name='translation')
    op.drop_index(op.f('ix_translation_language'), table_name='translation')
    op.drop_table('translation')
    op.drop_index('state_object_idx', table_name='state')
    op.drop_index('state_idx', table_name='state')
    op.drop_index(op.f('ix_state_user'), table_name='state')
    op.drop_table('state')
    op.drop_index(op.f('ix_position_rate'), table_name='position')
    op.drop_table('position')
    op.drop_index('place_name_idx', table_name='place')
    op.drop_index(op.f('ix_place_user'), table_name='place')
    op.drop_index(op.f('ix_place_country'), table_name='place')
    op.drop_table('place')
    op.drop_index(op.f('ix_document_user'), table_name='document')
    op.drop_index('document_idx', table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_company_user'), table_name='company')
    op.drop_index('company_nane_idx', table_name='company')
    op.drop_table('company')
    op.drop_index(op.f('ix_account_user'), table_name='account')
    op.drop_index('account_issuer_idx', table_name='account')
    op.drop_table('account')
    op.drop_index('name_trg_idx', table_name='relation')
    op.drop_index('name_src_idx', table_name='relation')
    op.drop_index(op.f('ix_relation_user'), table_name='relation')
    op.drop_table('relation')
    op.drop_index('rate_category_code_idx', table_name='rate')
    op.drop_index(op.f('ix_rate_user'), table_name='rate')
    op.drop_table('rate')
    op.drop_index('val_int_idx', table_name='property')
    op.drop_index('val_idx', table_name='property')
    op.drop_index('val_dt_idx', table_name='property')
    op.drop_index('val_dec_idx', table_name='property')
    op.drop_index('obj_idx', table_name='property')
    op.drop_index(op.f('ix_property_user'), table_name='property')
    op.drop_table('property')
    op.drop_index('procedure_category_code_idx', table_name='procedure')
    op.drop_index(op.f('ix_procedure_user'), table_name='procedure')
    op.drop_index(op.f('ix_procedure_name'), table_name='procedure')
    op.drop_table('procedure')
    op.drop_index('picture_category_code_idx', table_name='picture')
    op.drop_index(op.f('ix_picture_user'), table_name='picture')
    op.drop_table('picture')
    op.drop_index('message_sender_idx', table_name='message')
    op.drop_index('message_receiver_idx', table_name='message')
    op.drop_index('message_idx', table_name='message')
    op.drop_index(op.f('ix_message_user'), table_name='message')
    op.drop_table('message')
    op.drop_index('language_category_code_idx', table_name='language')
    op.drop_index(op.f('ix_language_user'), table_name='language')
    op.drop_index(op.f('ix_language_name'), table_name='language')
    op.drop_index(op.f('ix_language_iso'), table_name='language')
    op.drop_table('language')
    op.drop_index(op.f('ix_entity_user'), table_name='entity')
    op.drop_index('entity_category_code_idx', table_name='entity')
    op.drop_table('entity')
    op.drop_index(op.f('ix_data_user'), table_name='data')
    op.drop_index('data_idx', table_name='data')
    op.drop_table('data')
    op.drop_index(op.f('ix_currency_user'), table_name='currency')
    op.drop_index(op.f('ix_currency_num'), table_name='currency')
    op.drop_index('currency_num_idx', table_name='currency')
    op.drop_table('currency')
    op.drop_index(op.f('ix_country_name'), table_name='country')
    op.drop_index(op.f('ix_country_m49'), table_name='country')
    op.drop_index(op.f('ix_country_iso3'), table_name='country')
    op.drop_index(op.f('ix_country_iso2'), table_name='country')
    op.drop_table('country')
    op.drop_index(op.f('ix_access_user'), table_name='access')
    op.drop_index('access_category_code_idx', table_name='access')
    op.drop_table('access')
    op.drop_index(op.f('ix_user_phone'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index('category_idx', table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
